<?xml version="1.0" encoding="UTF-8"?>
<org.nasdanika.vinci.app:Action xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:org.nasdanika.ncore="urn:org.nasdanika.ncore" xmlns:org.nasdanika.vinci.app="urn:org.nasdanika.vinci.app" xmlns:org.nasdanika.vinci.components="urn:org.nasdanika.vinci.components" title="Леция  9. Оформление" id="index" text="Оформление сайта" linkedElements="65085453-c78f-4dfe-909c-94b3b3944d17 67ca9017-6b87-45fe-b5cf-99af28f1326a" sectionStyle="Default" markdownContent="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" pageTemplate="./../templ.1.vinci">
  <appearance>
    <attributes xsi:type="org.nasdanika.ncore:Object" name="style">
      <entries xsi:type="org.nasdanika.ncore:Property" value="none" name="text-decoration"/>
    </attributes>
    <text alignment="Center" color="Warning"/>
  </appearance>
  <elements xsi:type="org.nasdanika.vinci.app:Action" title=" Текст, цвет и  отступы" id="65085453-c78f-4dfe-909c-94b3b3944d17" text=" Текст, цвет и  отступы" icon="fas fa-pencil-ruler" activatorType="None" markdownContent="">
    <appearance>
      <text alignment="Center" color=""/>
    </appearance>
    <elements xsi:type="org.nasdanika.vinci.app:ActionCategory" title=" От чего зависит оформление сайта? " id="805ca46a-310f-45e6-9a9a-23ea8c4542a3" color="" text="От чего зависит оформление сайта?" linkedElements="09e28027-8019-4533-937b-867ece56bc6d 0bf222b4-26aa-4894-b9e9-dab95c7cb2f3 f42fea24-6a18-4c7e-9d5c-e1cb9926e435">
      <appearance background="Dark">
        <attributes xsi:type="org.nasdanika.ncore:Object" name="style">
          <entries xsi:type="org.nasdanika.ncore:Property" value="1.25rem" name="font-size"/>
        </attributes>
        <text color="Light" weight="Bold"/>
      </appearance>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Стили (CSS) и фреймворк Bootstrap" id="09e28027-8019-4533-937b-867ece56bc6d" color="Dark" text="Стили (CSS) и фреймворк Bootstrap" sectionStyle="Default" markdownContent="&#xD;&#xA;&#xD;&#xA;">
        <elements xsi:type="org.nasdanika.vinci.app:Action" title="первый абзац" id="0f177792-1b0d-4ac8-bd5d-77df28e0c8a8" role="Section" markdownContent="Для того чтобы сайт выглядел красиво, необходимо не только ввести текст и прописать пути к изображениям, которые будут отображаться при открытии HTML страниц. Необходимо так же указать: какие элементы будут использоваться на страницах и какие  правила оформления будут применяться к этим элементам. &#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;&#xD;&#xA;Правила оформления элементов страницы  описываются в каскадных таблицах стилей (по английски они называются CSS). Стили могут быть описаны:&#xD;&#xA; &#xD;&#xA;- в отдельном файле, ссылка на который указывается в теге `&lt;head>` &#xD;&#xA;- в теге `&lt;head>`, и тогда они будут применяться только к той странце в которой описаны&#xD;&#xA;- непосредственно в теле страницы, в том коде, который размещён в  теге `&lt;body>` и в этом случае они применяются к конкретному элементу или блоку страницы.     &#xD;&#xA;&#xD;&#xA;----   &#xD;&#xA;"/>
        <elements xsi:type="org.nasdanika.vinci.app:Action" title="абзац с картинкой" id="7d1dd349-26fe-4596-9990-99b100de7386" role="Section" sectionStyle="Action group" markdownContent="">
          <elements xsi:type="org.nasdanika.vinci.app:Action" title="группа с картинкой" id="21524314-a00a-4c1b-90ba-9371d6742273" text="&lt;img src=&quot;img/styleandbody.svg&quot; alt=&quot;тег head&quot;>" role="Section" markdownContent="Для того чтобы браузер знал, каким образом сформировать страницу, в теге head указывается путь: в какой файл надо сходить и посмотреть на правила оформления элементов. Пользователь не видит содержание тега Head, оно предназначено только для браузера.">
            <appearance background="Dark"/>
          </elements>
        </elements>
        <elements xsi:type="org.nasdanika.vinci.app:Action" title="что будет если удалить стили" id="1b7673c4-b0b5-4f75-ab41-9034d3d05a0c" role="Section" markdownContent="Теперь давайте посмотрим: что бы получилось без использования таблиц стилей и скриптов. &#xD;&#xA;&#xD;&#xA;Откроем любую страницу сайта. Например, раздел Адениум.  Включим просмотр кода и удалим всё, что находится между открывающим и закрывающим тегом head.   &#xD;&#xA;А теперь посмотрим на результат и убедимся в том, что он поистине ужасен.&#xD;&#xA;&#xD;&#xA;Так вот, смысл использования фреймворка Bootstrap состоит в том, что некие добрые люди придумали: какие элементы могут использоваться на странице и дали этим элементам имена (или классы).    &#xD;&#xA;Так же они создали каскадные таблицы стилей, в которых описано: как должны быть оформлены элементы страницы,  которым присвоены bootstrap классы.  &#xD;&#xA;&#xD;&#xA;А другие добрые люди чуть чуть изменили эти правила оформления и предоставили всему миру 20 беспатных тем оформления, которые можно увидеть на сайте https://bootswatch.com. &#xD;&#xA;&#xD;&#xA;Использование фреймворка Bootstrap позволяет нам не задумываться об  оформлении страницы  - мы можем просто сказать спасибо тем людям, которые за нас уже подумали о том как сделать красиво, Нам остаётся только  следовать тем правилам, которые эти люди установили.&#xD;&#xA;&#xD;&#xA;В то же время, если какие-то из настроек определённых в bootstrap-теме нам не нравятся или не подходят, то мы можем их переопределить для каждого конкретного элемента страницы.  Результат этого переопределения может быть не всегда удачным, но Nasdanika Vinci  не ограничивает свободы творчества - вы можете управлять внешним видом своей страницы, если у вас есть необходимые для этого знания.    &#xD;&#xA;&#xD;&#xA;![просмотр кода](img/codehtml.jpg &quot;Щелкните правой кнопкой мыши по странице и в контекстном меню найдите пункт Просмотреть код&quot;)    &#xD;&#xA;&#xD;&#xA;![как развернуть тег](img/tagheadinhtml.jpg &quot;Чтобы просмотреть содержание тега его необходимо развернуть&quot;)   &#xD;&#xA;&#xD;&#xA;![Содержание тега head](img/tagheadinhtml01.jpg &quot;Содержание тега head&quot;)"/>
      </elements>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Шаблон оформления" id="0bf222b4-26aa-4894-b9e9-dab95c7cb2f3" color="Dark" text="Шаблон оформления (Page Tamplate)" linkedElements="dfae7678-8dd4-4326-a90a-2ade2299f89c" markdownContent="При создании Vinci модели мы выбираем одну из двух Bootstrap тем, встроенных в Vinci. Ссылка на эту тему содержится в поле  Page Tamplate  корневой Action модели. И, в этом поле мы можем указать ссылку на какой-либо другой шаблон, если он у нас есть. &#xD;&#xA;&#xD;&#xA;Шаблон представляет собой файл с расширением Vinci, но от созданной нами модели сайта он отличается тем, что содержит дополнительные настройки, определяющие внешний вид элементов макета страницы: хедера, вертикальных и горизонтальных навигационных панелей, контент панели и футера.     &#xD;&#xA;&#xD;&#xA;![Ссылка на шаблон оформления располагается в окне совойств Action](img/Pagetamplate.jpg &quot;Ссылка на шаблон оформления располагается в окне совойств Action&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;">
        <elements xsi:type="org.nasdanika.vinci.app:Action" title="Скачать шаблон оформления" id="dfae7678-8dd4-4326-a90a-2ade2299f89c" text=" Скачать шаблон" icon="fa fa-download" role="Context" activator="./United.vinci"/>
      </elements>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Как применить шаблон оформления к странице" id="f42fea24-6a18-4c7e-9d5c-e1cb9926e435" color="Dark" text="Как применить шаблон оформления к странице" linkedElements="dfae7678-8dd4-4326-a90a-2ade2299f89c" markdownContent="Давайте применим к нашему учебному сайту акой же шаблон, который применён к той странице на которую вы сейчас смотрите.&#xD;&#xA;&#xD;&#xA;1. Скачайте файл модели - шаблона (по ссылке в правом верхнем углу этой страницы). Сохраните этот файл в папке вашего проекта.&#xD;&#xA;2. Затем сформируйте ссылку на файл шаблона в поле __Page  tamplate__. Если шаблон находится в папке проекта, то сначала нужно поставить точку, затем слэш, затем указать путь к файлу.&#xD;&#xA;3. Если файл находится где-то в сети, то можно просто скопировать абсолютный путь и вставить в это поле.&#xD;&#xA;4. Сгенерируйте сайт заново.&#xD;&#xA;&#xD;&#xA;![Меняем шаблон оформления](img/Pagetamplate01.jpg &quot;Так нужно построить ссылку на файл шаблона, расположенный в папке проекта&quot;)&#xD;&#xA;&#xD;&#xA;Обратите внимание, что мы можем применить шаблон к любой __Action__ нашей модели.  После того как в любой Action появится ссылка на шаблон оформления, этот элемент модели и его дочерние элементы будут оформлены по новым правилам, указанным в новом шаблоне.&#xD;&#xA;&#xD;&#xA;Следовательно, мы можем устанавливать разные шаблоны оформления для разных разделов сайта.     &#xD;&#xA;Например, мы можем изменить оформление раздела __Шлюмбергера__. И увидим, что у нас изменился цвет навигационной панели, изменились цвета кнопок, изменился шрифт, которым оформлена корневая Action. А если мы вернемся в раздел Адениум - то увидим, что в нём всё осталось по старому. "/>
    </elements>
    <elements xsi:type="org.nasdanika.vinci.app:ActionCategory" title="Настройки оформления в модели сайта" id="c1451154-4318-40a9-8f75-897f358e5a4c" text="Настройки оформления в модели сайта" linkedElements="2bb6c8cc-d7e3-4832-9245-02ee368da016 7e79f58e-646c-4991-ba87-53b36b5f1c83 543d04ed-394f-4e11-9836-239a8e0e6004">
      <appearance background="Dark">
        <attributes xsi:type="org.nasdanika.ncore:Object" name="style">
          <entries xsi:type="org.nasdanika.ncore:Property" value="1.25rem" name="font-size"/>
        </attributes>
        <text color="Light" weight="Bold"/>
      </appearance>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Элемент модели  Appearance" id="c02d95c2-e4ce-4b15-a1b7-0911e80ec03f" color="Dark" text="Элемент модели  Appearance">
        <content xsi:type="org.nasdanika.vinci.components:MarkdownText" title="Дочерний элемент Appearance" style="true" markdown="&#xD;&#xA;Для того чтобы  применить к определенному элементу модели какое либо оформление, необходимо создать специальный дочерний элемент, который называется __Appearance__.&#xD;&#xA;&#xD;&#xA;Одно из значений английского слова appearance -  внешний вид. Именно за настройки внешнего вида и отвечает этот элемент.&#xD;&#xA;&#xD;&#xA;__Appearance__ не создаётся автоматически, его нужно специально создать нажав правой кнопкой мыши на элемент модели и выбрав в контекстном меню __New child -> Appearance__. При этом, нам нужно обязательно находиться в дереве элементов, в режиме диаграммы настройки внешнего вида не создаются. &#xD;&#xA;&#xD;&#xA;![Создаём элемент Appearance](img/createappearance01.jpg &quot;Создаём элемент Appearance&quot;)    &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Обратите внимание, что настройки внешнего  вида  могут быть созданы не только к __Action__, но и к контент-элементам модели: например к контент элементам Маркдаун текст и Маркдаун - ресурс, а так же к bootstrap  таблицам и к контейнерам. &#xD;&#xA;&#xD;&#xA;Непосредственно в элементе __Appearance__ может быть установлен только цвет бэкграунда.  Для применения других настроек  необходимо создать соответсвующий дочерний элемент.  Создание чего угодно в Vinci происходит по стандартной схеме:  щелкаем правой кнопкой мыши по элементу __Appearance__, выбираем в контекстном меню New child , а затем - тот элемент, который хотим создать.&#xD;&#xA;&#xD;&#xA;![](img/createappearance02.jpg &quot;Создаём дочерние элементы - настройки оформления&quot;)&#xD;&#xA;&#xD;&#xA;Мы можем установить настройки оформления для текста, создать границы, установить внутренние и внешние отступы. Так же мы можем установить свойство float. Его использование  приводит к смещению элемента к какому либо краю страницы и к тому, что остальные элементы страницы начинают “обтекать” его. В рамках данного курса мы его не будем использовать.&#xD;&#xA;&#xD;&#xA;----&#xD;&#xA;&#xD;&#xA;__!__ Если нам необходимо применить одинаковые настройки внешнего вида к разным элементам модели   - мы можем просто скопировать и вставить их в нужный элемент.&#xD;&#xA;&#xD;&#xA;Для того чтобы настройки внешнего вида перестали применяться  - их нужно удалить из модели.&#xD;&#xA;&#xD;&#xA;----"/>
      </elements>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Цвет" id="2bb6c8cc-d7e3-4832-9245-02ee368da016" color="Dark" text="Цветовые акценты" markdownContent="Одним из правил, которые диктует нам фреймворк bootstrap  является то, что  вместо названий цветов используются специальные названия цветовых акцентов. Всего их 8, они всегда называются одинаково, но в разных темах они выражаются разными цветами. &#xD;&#xA;&#xD;&#xA;Цветовые классы (акценты) по разному применяются к различным элементам. Например в таблицах и элементах List Groups цвета  бледнее.&#xD;&#xA;&#xD;&#xA;В Nasdanika Vinci цвета могут быть установлены  в нескольких местах и несколькими способами. И, в зависимости от того где они установлены  - результаты будут разные. &#xD;&#xA;&#xD;&#xA;Во-первых, цвет может быть установлен непосредственно в самой Action. Для этого существует специальное поле Color. Например, если установить цвет в этом поле для карточек  - то хедер и граница карточки изменят свой цвет. Если установить цвет в этом поле для таблицы,  то таблица тоже приобретет соответствующий цветовой акцент. &#xD;&#xA;&#xD;&#xA;А вот если попытаться изменить с помощью этого поля цвет корневого и стволового элемента модели - то ничего не получится, потому что настройки установленные для элементов макета страницы Header и Navbar имеют больший приоритет. Это сделано для того, чтобы оформление страницы оставалось приемлемым для восприятия несмотря на старания пользователя.&#xD;&#xA;&#xD;&#xA;Второй способ применения цвета  - это установка цвета бэкграунда элемента модели.  Для этого необходимо  создать дочерний элемент Appearance и в нем установить цвет бэкграунда.  Результат будет зависеть от того, к какому типу Action были применены настройки. &#xD;&#xA;&#xD;&#xA;Например  в корневой и стволовой Action будет  выделено цветом только то пространство, которое занимает текст.  Если бэкграунд установлен для Action, которая формирует вкладку, то выделится вся строка кроме активной вкладки.  &#xD;&#xA;&#xD;&#xA;В карточке бэкграунд применится только к хедеру, а граница останется светло-серого цвета.&#xD;&#xA;  &#xD;&#xA;Если установить бэкграунд для таблицы, то эта настройка применится только к первой ячейке таблицы. &#xD;&#xA;&#xD;&#xA;Так же мы можем установить цветовой акцент для текста,  границ элемента и для bootstrap  таблиц. Мы посмотрим как это делается, когда будем создавать соответствующие элементы. &#xD;&#xA;&#xD;&#xA;![](img/Colors_03.jpg)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;"/>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Отступы и границы" id="7e79f58e-646c-4991-ba87-53b36b5f1c83" color="Dark" text="Отступы и границы" markdownContent="### Отступы&#xD;&#xA;&#xD;&#xA;Страницы нашего сайта сформированы из различных блоков,  эти блоки могут иметь содержимое в виде текста, картинок или других блоков.  И нам может понадобиться визуально отделить один блок от другого, либо установить расстояние, которое отделяет содержимое блока от его границы. То есть, необходимо установить  поля и отступы.  &#xD;&#xA;&#xD;&#xA;Поля — это расстояние между контентом (content) и границей блока (border). &#xD;&#xA;&#xD;&#xA;А отступы это расстояние между границей блока и границей соседнего или родительского элемента.&#xD;&#xA;&#xD;&#xA;![](img/mpb.jpg &quot;Мы можем посмотреть какие границы и поля установлены для элемента страницы в окне просмотра кода&quot;)&#xD;&#xA;&#xD;&#xA;Для создания полей мы создаем к Apperance дочерний элемент с типом __Padding__. А для создания отступов - дочерний элемент с типом __Margin__. &#xD;&#xA;&#xD;&#xA;Для демонстрации того, как это делается перейдем в раздел __Шлюмбергера__.  &#xD;&#xA;&#xD;&#xA;Мы видим, что на нашей странице много текста, много букв и весь этот текст как бы &quot;сливается&quot; в единый блок, а нам бы хотелось &quot;добавить воздуха&quot; на страницу, сделать так, чтобы текстовые блоки не прилипали друг к другу. &#xD;&#xA;&#xD;&#xA;Для того чтобы отделить раздел __Описание__ от находящегося выше него раздела __Шлюмбергера__  давайте зададим верхний отсуп. Для этого разделу __Описание__ создадим дочерний элемент  __Apperance__, а к нему создадим дочерний элемент с типом __Margin__.&#xD;&#xA;&#xD;&#xA;Выделим вновь созданный элемент и посмотрим на его свойства. &#xD;&#xA;Мы видим, что Vinci предлагает нам установить размер отступа (в относительных единицах, которые называются rem, каждая единица составляет 0,25 rem). Так же нам необходимо выбрать: для какой стороны блока устанавливается отступ. &#xD;&#xA;&#xD;&#xA;Мы можем указать, что отступ устанавливается для каждой стороны по отдельности, а можем задать горизонтальные и вертикальные отступы. &#xD;&#xA;Горизонтальные отступы  - это отступы по оси x, а вертикальные отступы - соответственно по оси y.&#xD;&#xA;&#xD;&#xA;Кроме размера отступа и стороны для которой он задаётся мы можем установить какое либо значение в загадочное поле breakepoint. В выпадающем списке мы видим значения: маленький, средний, большой и экстра большой. &#xD;&#xA;О чем идет речь? В этом поле мы можем выбрать: применять отступы и поля на устройствах всех размеров или только начиная с какого-то определенного размера. Либо, мы можем для каждого размера устройства задать свои определенные поля и отступы.&#xD;&#xA;&#xD;&#xA;Мы установим в поле брэйкпоинт значение __большой (Lage)__ и посмотрим на результат. &#xD;&#xA;&#xD;&#xA;Как мы видим,   элемент __Описание__ теперь отделяется от верхнего текстового блока отступом.  Откроем инструменты разработчика и посмотрим: что показывает нам браузер? &#xD;&#xA;&#xD;&#xA;Выберем тот элемент который мы изменияли, перейдём на панель выбора размера устройства  и установим в поле Ширина значение 1000 -  после этого посмотрим: какие отступы формирует браузер для этого элемента.&#xD;&#xA;&#xD;&#xA;Изменим значение в поле ширина 980 и увидим, что верхний отступ пропал, остался только нижний.  &#xD;&#xA;&#xD;&#xA;Таким образом, для устройств разного размера мы можем установить различные отступы, а если брэйкпоинт не выбран, то отступы будут отображаться на устройствах любого размера. То есть, можно настроить их так, чтобы при просмотре страницы с телефона или планшета отступов не было, а при просмотре на большом мониторе - они были.&#xD;&#xA;&#xD;&#xA;Если необходимо установить разные размеры отступов для разных сторон элемента, то создаются несколько элементов с типом __Margin__: например, верхний отступ будет иметь значение 5  что составит 1,25 rem , нижний - 2 (или 0,5 rem),  а левый отступ - 4. Сгенерируем и посмотрим на результат.  &#xD;&#xA;&#xD;&#xA;Скопируем настройки внешнего вида элемента __Описание__ и вставим их в раздел __Характеристика вида__ - в результате группа кнопок переключающих нас между текстовыми блоками будет отделена от самого текстового  блока.&#xD;&#xA;&#xD;&#xA;А теперь посмотрим как работает свойство __Padding__.  &#xD;&#xA;Создадим соответствующий дочерний элемент к разделу __Агротехника__  и установим в поле Size в значение  4 .  Как мы видим, элемент __Агротехника__ в навбаре отделился от других элементов - боковые поля стали больше чем между другими элементами на той же навигационной панели. &#xD;&#xA;&#xD;&#xA;### Границы &#xD;&#xA;&#xD;&#xA;Границы создаются и применяются аналогично элементам __Margin__ и __Padding__, в том смысле, что элементов с типом Border можно создать несколько: по одному для каждой стороны. И для каждого из этих элементов установить свой цвет, например.&#xD;&#xA;&#xD;&#xA;Наличие или отсутствие границы не может быть установлено для устройств какого либо определенного размера, поэтому поля Брэйкпоинт в этом элементе нету. &#xD;&#xA;&#xD;&#xA;![](img/Appearance_child_01.jpg)"/>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Текст" id="543d04ed-394f-4e11-9836-239a8e0e6004" color="Dark" text="Текст" markdownContent="">
        <content xsi:type="org.nasdanika.vinci.components:MarkdownText" title="Текст" style="true" markdown="Настройки  выравнивания, цвета, вида трансформации и начертания шрифта содержатся в дочернем элементе, который так и называется: Text. Создадим этот элемент и посмотрим на его настройки.     &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;### Alignment &#xD;&#xA;&#xD;&#xA;В этом поле мы можем установить настройки выравнивания текста: по центру, по правому и левому краю и по ширине.&#xD;&#xA;&#xD;&#xA;### Color&#xD;&#xA;&#xD;&#xA;В этом поле устанавливается цвет текста.&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;### Transform&#xD;&#xA;&#xD;&#xA;Эта настройка позволяет установить трансформацию шрифта: так чтобы текст был написан всеми прописными буквами или всеми строчными или чтобы первая буква каждого слова стала прописной.&#xD;&#xA;&#xD;&#xA;### Weight&#xD;&#xA;&#xD;&#xA;Эта настройка устанавливает насыщенность шрифта: жирный,  светлый, нормальный.&#xD;&#xA;&#xD;&#xA;###  Monospase&#xD;&#xA;&#xD;&#xA;Устанавливает моноширинное начертание шрифта.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;### Italic&#xD;&#xA;&#xD;&#xA;Курсив&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;###  Nowrap &#xD;&#xA;&#xD;&#xA;Эта настройка запрещает переносить строки текста внутри вмещающего этот текст элемента. &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;### Truncate&#xD;&#xA;&#xD;&#xA;Это свойство позволяет обрезать строку таким образом, чтобы  она не выходила за границы вмещающего её элемента и в то же время не происходил перенос на следующую строку блока текста. &#xD;&#xA;&#xD;&#xA;"/>
      </elements>
    </elements>
    <elements xsi:type="org.nasdanika.vinci.app:ActionCategory" title="Оформление markdown-контента" id="9ee331fc-f02d-4e29-be34-02abb3ef0199" text="Оформление markdown-контента" linkedElements="8f4cd1e6-7531-4042-baf3-c63b97713b8b 64a2afe8-3e8d-47d2-b406-a14ba2ad0645 01bebd52-e1a3-4cbd-93e6-27e0d8024d89">
      <appearance background="Dark">
        <attributes xsi:type="org.nasdanika.ncore:Object" name="style">
          <entries xsi:type="org.nasdanika.ncore:Property" value="1.25rem" name="font-size"/>
        </attributes>
        <text color="Light" weight="Bold"/>
      </appearance>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Markdoun контент-элементы" id="8f4cd1e6-7531-4042-baf3-c63b97713b8b" color="Dark" text="Markdoun контент-элементы" markdownContent="Возможно вы уже заметили, что при изменении настроек внешнего вида, которые созданы для __Action__, изменяется то представление элемента модели, которое находится в навигационном каркасе сайта, а если __Action__ играет роль секции страницы, то изменяется только её заголовок, в то время как оформление текста  - не меняется.&#xD;&#xA;&#xD;&#xA;Это обусловлено тем, что элементы модели играют двоякую роль: они формируют точку перехода к своему содержанию и показывают нам своё содержание в области контент-панели. При этом содержание может принадлежать и самой __Action__  и её дочерним элементам, имеющим собственные настройки оформления. Поэтому генератор не применяет настройки оформления к тексту.&#xD;&#xA;&#xD;&#xA;Для того, чтобы применить какое-либо оформление к тексту, его необходимо выделить  в отдельный блок: &#xD;&#xA;&#xD;&#xA;- создать новый контент-элемент (Markdown text или Markdown Resource);&#xD;&#xA;- поместить в него текст;&#xD;&#xA;- установить галочку __Style__ в свойствах контент-элемента;&#xD;&#xA;- создать для этого контент-элемента настройки оформления (Appearance). &#xD;&#xA;&#xD;&#xA;До сих пор мы, в основном, создавали маркдаун заметки непосредственно в самой Action. Это наиболее быстрый, но не единственный способ создания маркдаун-контента.&#xD;&#xA;&#xD;&#xA;Установим мышь на папку __Content__ какого либо элемента модели, вызовем контекстное меню, выберем создание дочернего элемента из папки  __Markdoun__   и увидим, что система предлагает нам создать либо [маркдаун текст](64a2afe8-3e8d-47d2-b406-a14ba2ad0645.html) либо [маркдаун ресурс](01bebd52-e1a3-4cbd-93e6-27e0d8024d89.html). &#xD;&#xA;&#xD;&#xA;![Маркдаун контент-элементы](img/markdouncontent01.jpg &quot;Маркдаун контент-элементы&quot;)"/>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Markdoun текст" id="64a2afe8-3e8d-47d2-b406-a14ba2ad0645" color="Dark" text="Markdoun текст" markdownContent="Контент-элемент __Markdoun text__ очень похож на на маркдаун-заметки внутри __Action__ но предоставляет нам ряд преимуществ:&#xD;&#xA;&#xD;&#xA;- мы можем быстро и просто изменять порядок текстовых блоков;&#xD;&#xA;- переносить контент-элемент из одной __Action__ в другую (а следовательно из одного раздела сайта в другой);&#xD;&#xA;- создавать для каждого текстового блока отдельные настройки оформления.&#xD;&#xA;&#xD;&#xA;![Переносим текст Action  в контент-элементы Маркдаун-текст](img/markdouncontent02.jpg &quot;Переносим текст Action  в контент-элементы  Маркдаун-текст&quot;)    &#xD;&#xA;&#xD;&#xA;На вкладке __Main__ контент элемента мы можем задать его название и установить галочку __Style__, которая скажет генератору, что к этому блоку текста можно применять стили. &#xD;&#xA;&#xD;&#xA;Если галочка не установлена генератор не присвоит этому текстовому блоку стили и оформление не применится.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;![Создаём настройки оформления для контент элемента Маркдаун-текст](img/markdouncontent03.jpg &quot;Создаём настройки оформления для контент элемента Маркдаун-текст&quot;)"/>
      <elements xsi:type="org.nasdanika.vinci.app:Action" title="Markdoun ресурс" id="01bebd52-e1a3-4cbd-93e6-27e0d8024d89" color="Dark" text="Markdoun ресурс" markdownContent="Markdoun ресурс - это файл, , имеющий расширение *.md и содержащий внутри себя текст в формате Markdoun.&#xD;&#xA;&#xD;&#xA;Файл может храниться внутри проекта или вне проекта: на компьютере пользователя, в локальной сети, в интернете. В момент генерации сайта содержимое файла извлекается из него, преобразуется в HTML код и встраивается в страницу. &#xD;&#xA;&#xD;&#xA;Использование маркдаун-ресурсов имеет следующие преимущества:&#xD;&#xA;&#xD;&#xA;- можно встраивать в страницу файлы, которые вам присылают другие люди (например соавторы);&#xD;&#xA;- можно менять порядок контент элементов и перемещать их между __Action__ (так же как и маркдаун-текст);&#xD;&#xA;- можно использовать удобные сторонние редакторы для создания маркдаун-текстов. Например отличный редактор [Typora](https://typora.io/);&#xD;&#xA;- можно создавать и применять настройки оформления __Appearance__.    &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;![](img/markdounresource01.jpg)    &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;На вкладке __Main__ контент-элемента маркдаун-ресурс необходимо указать путь к файлу в поле __Location__ и установить галочку __Style__, если вы хотите применить к нему настройки оформления. &#xD;&#xA;&#xD;&#xA;Необходимо учитывать, что если вы не введёте путь в поле __Location__ или файл, на который вы ссылаетесь будет удалён, или вы неправильно сформируете ссылку на этот файл, то генерация сайта завершится с ошибкой и вам нужно будет  либо указать правильный путь к файлу, либо удалить из модели маркдаун ресурс c &quot;битой&quot; ссылкой. &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;&#xD;&#xA;__Очень важно правильно построить путь к файлу!__&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;&#xD;&#xA;Если файл хранится внутри проекта - целесообразно построить относительный путь. Он должен начинаться от папки, в которой хранится ваша модель (как правило модель хранится в корневой папке проекта). В начале пути необходимо указать точку и слэш:&#xD;&#xA;&#xD;&#xA;![](img/markdounresource02.jpg)&#xD;&#xA;&#xD;&#xA;Если вы указываете абсолютный путь к локальному файлу  - вам необходимо в начале пути написать: __`file:///`__ &#xD;&#xA;&#xD;&#xA;Если указываете ссылку на файл находящийся в сети Интернет путь должен начинаться с __`https://`__&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;"/>
    </elements>
    <elements xsi:type="org.nasdanika.vinci.app:Action" title="Полезные ресурсы" id="8d8c8331-fccd-4910-a4dd-d46c51d68003" text="Полезные ресурсы" role="Context" markdownContent="https://bootswatch.com."/>
    <linkedElements xsi:type="org.nasdanika.vinci.app:ActionCategory" href="#805ca46a-310f-45e6-9a9a-23ea8c4542a3"/>
    <linkedElements xsi:type="org.nasdanika.vinci.app:ActionCategory" href="#c1451154-4318-40a9-8f75-897f358e5a4c"/>
    <linkedElements xsi:type="org.nasdanika.vinci.app:ActionCategory" href="#9ee331fc-f02d-4e29-be34-02abb3ef0199"/>
    <linkedElements xsi:type="org.nasdanika.vinci.app:Action" href="soderjanie.vinci#6d499071-cdb5-49aa-b73a-8d3a50c7a64e"/>
    <linkedElements xsi:type="org.nasdanika.vinci.app:Action" href="#8d8c8331-fccd-4910-a4dd-d46c51d68003"/>
  </elements>
  <elements xsi:type="org.nasdanika.vinci.app:Action" title="ссылка на сайт разработчика" id="67ca9017-6b87-45fe-b5cf-99af28f1326a" text="nasdanika.org " activator="https://nasdanika.org/"/>
  <content xsi:type="org.nasdanika.ncore:Value" title="Девятая лекция на ю-тубе" value="&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Fq2SMQJF-Yk&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen>&lt;/iframe>"/>
  <content xsi:type="org.nasdanika.ncore:Value" title="отбивка" value="&lt;p>&lt;/p>"/>
  <content xsi:type="org.nasdanika.vinci.components:MarkdownText" title="Вступительное слово" style="true" markdown="Эта лекция наконец - таки будет посвящена тому, что имеет хоть какое - то отношение к веб-дизайну. &#xD;&#xA;&#xD;&#xA;До сих пор мы в  основном занимались построением навигационного каркаса сайта и наполнением страниц различным контентом. И при этом не задумывались о том, как будут выглядеть созданные нами страницы: какой будет использован шрифт? Какой бэкграунд будет у различных блоков страницы? Vinci  определял это за нас руководствуясь настройками, которые установлены где-то внутри генератора по умолчанию. &#xD;&#xA;&#xD;&#xA;Цель этого урока - научиться изменять оформление генерируемого сайта.&#xD;&#xA;&#xD;&#xA;В целом, внешний вид генерируемого сайта задаётся стилями оформления элементов страницы, определенными в фреймворке  Bootstrap. Цветовые акценты, шрифты, стиль оформления элементов страницы так же определяется выбранной темой оформления Bootswatch.&#xD;&#xA;&#xD;&#xA;Для того чтобы изменить установленное по умолчанию оформление элементов страницы у пользователя есть несколько возможностей:&#xD;&#xA;&#xD;&#xA;- подключить к сайту другой шаблон оформления;&#xD;&#xA;- создать специальный элемент модели, который содержит настройки оформления. Этот элемент называется __Appearance__ и позволяет настраивать внешний вид отдельной __Action__ и формируемого этой  __Action__ элемента страницы.&#xD;&#xA;&#xD;&#xA;Кроме того, к странице могут быть подключены таблицы стилей разработанные пользователем. &#xD;&#xA;&#xD;&#xA;Однако, хотелось бы сразу предупредить: Nasdanika Vinci не предназначен для вёрстки с точностью до пикселя и не является инструментом для воплощения дизайнерского полёта мысли. &#xD;&#xA;&#xD;&#xA;__Nasdanika Vinci__ -  это рабочая лошадка, которая позволит вам  быстро сконструировать сайт, быстро его опубликовать, протестировать качество восприятия информации пользователем, а потом уже задумываться о том, как навести дополнительную красоту. Оформление созданного сайта будет приемлемо для восприятия, и вам не придется платить деньги за дизайн и за HTML вёрстку, по крайней мере на первом этапе создания сайта. &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;">
    <appearance>
      <margin size="2" breakpoint="Large" bottom="false" left="false" right="false"/>
      <margin size="4" breakpoint="Large" top="false" left="false" right="false"/>
    </appearance>
  </content>
</org.nasdanika.vinci.app:Action>

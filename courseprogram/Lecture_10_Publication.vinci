<?xml version="1.0" encoding="UTF-8"?>
<org.nasdanika.vinci.app:Action xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:org.nasdanika.vinci.app="urn:org.nasdanika.vinci.app" title="Лекция  10. Публикация" description="Публикуем сайт на GitHub.&#xD;&#xA;Используем GitHub Pages.&#xD;&#xA;Что такое Хостинг?&#xD;&#xA;Что такое публикация?&#xD;&#xA;" id="index" text=" Публикация сайта. Что такое хостинг?" icon="far fa-share-square" linkedElements="65085453-c78f-4dfe-909c-94b3b3944d17 0c385d36-3e73-45ce-a9bb-48c1dff5f31e 76144261-aa7e-4df4-9ef9-fd011bca0dd3 0ff41a60-2f53-4c83-9c2e-67ecaf6dc64c" sectionStyle="Default" markdownContent="Итак, мы добрались до последнего урока нашего курса. &#xD;&#xA;&#xD;&#xA;К настоящему моменту у нас уже есть готовый статический сайт. До сих пор наш  сайт был опубликован локально: то есть, мы открывали файлы из которых он состоит из папки на компьютере.&#xD;&#xA;&#xD;&#xA;Теперь нам необходимо сделать так, чтобы сайт был доступен всему просвещенному человечеству -  опубликовать его в сети Интернет.&#xD;&#xA;&#xD;&#xA;__Публикация__  статического сайта - это размещение файлов из которых он состоит на [web-сервере]( https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%B1-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80 &quot;веб-сервер это такой компьтер, который работает круглосуточно, на нем хранятся те файлы, которые составляют сайт&quot;). Услуга по размещению, хранению и обеспечению доступности файлов называется __Хостинг__.&#xD;&#xA;&#xD;&#xA;Для того чтобы пользователи могли обратиться к сайту у него должен быть уникальный адрес (__доменное имя__).&#xD;&#xA;&#xD;&#xA;Для размещения коммерческих сайтов целесообразно использовать платный хостинг  и купить собственное доменное имя.&#xD;&#xA;&#xD;&#xA;Однако, в учебных целях мы можем воспользоваться бесплатным хостингом и доменным именем третьего уровня, которые предоставляет нам социальная сеть для программистов [GitHub](https://github.com/)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" pageTemplate="./../templ.1.vinci">
  <elements xsi:type="org.nasdanika.vinci.app:Action" title="Git Hub Pages - бесплатный публичный хостинг статических сайтов" id="65085453-c78f-4dfe-909c-94b3b3944d17" text=" Git Hub Pages - бесплатный публичный хостинг статических сайтов" icon="fab fa-github" linkedElements="7fd56c43-dec3-4720-af8a-20663833ffc4 7e79f58e-646c-4991-ba87-53b36b5f1c83 e6f5483c-9b8b-4626-a23e-29e7f1fb94b7 02d27bb4-41ae-46a7-8fa2-8852639534ee 543d04ed-394f-4e11-9836-239a8e0e6004 64a2afe8-3e8d-47d2-b406-a14ba2ad0645 70807563-7f4c-46c5-8c79-ab942df20fdb" markdownContent="GitHub Pages -  это один из многочисленных инструментов, предоставляемых веб-сервисом [GitHub](https://ru.wikipedia.org/wiki/GitHub &quot;GitHub — крупнейший веб-сервис для хостинга IT-проектов и их совместной разработки&quot;).&#xD;&#xA;&#xD;&#xA;Если совсем простыми словами, то GitHub это очень удобная штука, которую придумали хитрые программисты чтобы разрабатывать что-нибудь, держать файлы с кодом в порядке, хранить промежуточные версии того что было наработано, управлять задачами по разработке, общаться друг с  другом и т.д. и т.п. Однако для того чтобы пользоваться всем этим богатством нужно уметь читать по английски, понимать програмистский жаргон и програмистскую логику. &#xD;&#xA;&#xD;&#xA;В этом разделе курса мы научимся наиболее простому способу использования GitHub -  через веб-интерфейс. И попробуем понять логику этого сервиса.&#xD;&#xA;&#xD;&#xA;Для того чтобы начать использовать GitHub и все его возможности необходимо:&#xD;&#xA;&#xD;&#xA;1. Зарегистрироваться (создать учетную запись)&#xD;&#xA;2. Создать хранилище для файлов. Хранилище по английски называется __репозиторий__, репозиториев может быть несколько.&#xD;&#xA;3. Инициировать репозиторий (создать файл readme.md)&#xD;&#xA;4. Загрузить в репозиторий файлы сайта&#xD;&#xA;5. Настроить репозиторий: указать из какой ветки или из какого места в главной ветке публиковать сайт. (про то, что такое ветка рассказано здесь)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;GitHub предназначен для размещения и хранения проектов с открытым исходным кодом и предполагается, что кто угодно может посмотреть на ваши файлы, скопировать их и начать работать над ними с вами в команде или самостоятельно.&#xD;&#xA;&#xD;&#xA;С 2019 года  GitHub позволяет создавать приватные репозитории для небольших частных проектов в рамках бесплатного аккаунта. Однако для того чтобы опубликовать содержимое репозитория как сайт он либо должен быть публичным, либо у вас должен быть платный аккаунт. &#xD;&#xA;&#xD;&#xA; Для работы с GitHub  существуют разные специальные инструменты, один из них встроен в Eclipse и позволяет обновлять содержимое репозитория каждый раз, когда вы вносите какие либо изменения в проект. &#xD;&#xA;&#xD;&#xA;Однако в рамках данного курса мы научимся работать с  GitHub через веб-интерфейс. Это не самый удобный способ, если вы собираетесь часто вносить изменения в свой сайт и с точки зрения настоящих программистов  - совершенно не кошерный. &#xD;&#xA;Зато этот способ быстрый и простой. И если вы не часто обновляете свой сайт - он вам вполне подходит.  &#xD;&#xA;&#xD;&#xA;Поэтому сейчас мы просто рассмотрим последовательность действий, которая позволит опубликовать сайт, а автоматизацию процесса публикации мы рассмотрим в курсе более высокого уровня. &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;">
    <appearance>
      <text alignment="Center" color=""/>
    </appearance>
    <elements xsi:type="org.nasdanika.vinci.app:Action" title="Регистрация" id="7fd56c43-dec3-4720-af8a-20663833ffc4" color="Dark" text="Регистрация на GitHub" markdownContent="Для регистрации на GitHub заходим на сайт https://github.com&#xD;&#xA;&#xD;&#xA;![Стартовая страница ГитХаб](img/001_ghpage.jpg &quot;Стартовая страница ГитХаб. Появляется только при первом входе в систему и в том случае, если вы не сохраняте пароли для автоматического входа на сайт в браузере&quot;)&#xD;&#xA;&#xD;&#xA;В верхнем правом углу экрана щелкаем на кнопку __Sine up__ или на кнопку __Sine in__. В первом случае сразу откроется форма регистрации, а во втором случае надо будет нажать на кнопочку __Create account__ в нижней части формы&#xD;&#xA;&#xD;&#xA;![Форма регистрации](img/01createnewaccaunt.jpg &quot;Форма регистрации&quot;) ![форма регистрации нового аккаунта](img/02_Screenshot_3.jpg &quot;Система предложит пройти проверку, чтобы убедиться, что вы не робот. Подтвердите согласие в большом сером прямоугольнике. После этого вам покажут зверушку, которую нужно повернуть ногами вниз. &quot;)&#xD;&#xA;&#xD;&#xA;После того как все поля заполнены нажмите кнопку __Create account__. Система предложит проверить почтовый ящик, указанный при регистрации: вам должно прийти письмо из которого надо отправить подтверждение созданного аккаунта.&#xD;&#xA;&#xD;&#xA;![](img/03_Screenshot_5.jpg)&#xD;&#xA;&#xD;&#xA;После подтверждения система спросит у вас: чем занимаетесь, какой у вас программистский опыт и что вы планируете делать на ГитХабе. Затем откроется страница get-started. На этой странице вам предложат выбрать, что вы собираетесь делать: &#xD;&#xA;&#xD;&#xA;- создать новый проект (первым шагом создания проекта является создание репозитория);&#xD;&#xA;- улучшить взаимодействие со своей командой (первый шаг - создание организации);&#xD;&#xA;- начать изучение ГитХаба.&#xD;&#xA;&#xD;&#xA;Мы выберем первую карточку и создадим новый репозиторий &#xD;&#xA;&#xD;&#xA;![Создадим новый репозиторий](img/04_r_repo.jpg)&#xD;&#xA;">
      <appearance>
        <text weight="Bold"/>
      </appearance>
    </elements>
    <elements xsi:type="org.nasdanika.vinci.app:Action" title="Создание репозитория" id="7e79f58e-646c-4991-ba87-53b36b5f1c83" color="Dark" text="Создание репозитория" markdownContent="Еще один способ создания репозитория:  нажать плюсик в правом верхнем углу экрана.  Система предложит создать новый репозиторий или импортировать существующий.&#xD;&#xA;&#xD;&#xA;Открывается страничка на которой необходимо ввести название репозитория, описание, указать публичный или приватный репозиторий мы создаем и инициализировать репозиторий. Для этого поставить галочку в чек-бокс Initialize this repository with a README. В результате создастся специальный файлик, в котором можно будет ввести подробное описание проекта для размещения которого мы создаем репозиторий. Это нужно сделать обязательно, иначе сайт не заработает и гитхаб будет ругаться и предлагать создать файл readmy.md самостоятельно. &#xD;&#xA;&#xD;&#xA;![Cоздание нового репозитория способ 2](img/CreateNewRepo_02.gif)&#xD;&#xA;&#xD;&#xA;Так же репозиторий может быть создан из выпадающего списка рядом с аватаркой аккаунта (правый верхний угол). Раскрываем список и выбраем пункт __Your repositories__. &#xD;&#xA;&#xD;&#xA;![Способ создания репозитория №3](img/Screenshot_14.jpg)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Откроется страница, на которой будут перечислены все имеющиеся репозитории и будет большая зеленая кнопка __New__, нажав которую можно создать новый репозиторий.&#xD;&#xA;&#xD;&#xA;![Способ создания репозитория №3](img/Screenshot_10.jpg)&#xD;&#xA;&#xD;&#xA;">
      <appearance>
        <text weight="Bold"/>
      </appearance>
    </elements>
    <elements xsi:type="org.nasdanika.vinci.app:Action" title="Что нужно знать про ГитХаб? Ветки, коммиты и другие особенности. " id="e6f5483c-9b8b-4626-a23e-29e7f1fb94b7" color="Dark" text="Что нужно знать про GitHub? &lt;br>Ветки, коммиты и другие особенности. " markdownContent="На данном этапе нам нужно знать несколько вещей:&#xD;&#xA;&#xD;&#xA;1. ГитХаб придуман для того, чтобы хранить информацию о всех изменениях состояния проекта: об изменениях в файлах, о загруженных, созданных и удалённых файлах и так далее.&#xD;&#xA;2. Любое изменение должно иметь описание: что именно сделано и зачем?&#xD;&#xA;3. Для того чтобы люди не могли вносить изменения без описания существует специальное действие __Commit changes__, что по русски значит: зафиксировать изменения.  &#xD;&#xA; Чтобы сделать коммит необходимо заполнить специальное поле с кратким описанием изменений, подробным описанием и указать: в какую из веток (__Branch__) проекта сохранить изменения.&#xD;&#xA;4. По умолчанию в репозитории создается главная ветка, которая так и называется: __master__.  Именно в неё нам и нужно сохранить все файлы созданного нами сайта.&#xD;&#xA;5. В веб интерфейсе GitHub не существует кнопки для создания папки (дирректории), так как пустая папка существовать не может. Если нам нужна папка для загрузки файлов, то необходимо создать файл и при создании указать, что он находится в нужной нам папке.&#xD;&#xA;6. ГитХаб работает не так как файловая система. Если вы пытаетесь сохранить файл в ту папку в которой уже есть такой же файл (с таким же имененем и расширением), то файловая система предложит вам переименовать или заменить этот файл. В GitHub всё по-другому: если вы захотите загрузить в репозиторий файл с таким же  именем и расширением как у уже имеющегося файла, то GitHub  не будет ругаться, а просто загрузит этот файл. При этом он сохранит не сам файл, а информацию об изменениях, которые были внесены по сравнению с предыдущей загруженной версией файла.  То есть, в репозитории будет доступна и старая и новая версия файла, но на сайте будет показана новая версия.&#xD;&#xA; &#xD;&#xA;----&#xD;&#xA;&#xD;&#xA;Итак,  мы создали репозиторий и смотрим на его первую страницу. Нам будет предложено научиться пользоваться ГитХабом. Мы оставим изучение на потом и закроем это заманчивое предложение&#xD;&#xA;&#xD;&#xA;Мы находимся на вкладке Code. Под строкой статистики есть кнопка с выпадающим списком, на которой написано: __Branch: master__. Эта кнопка показывает, что мы находимся в основной ветке нашего репозитория, в этой ветке будет храниться основная версия нашего сайта. А если, например, мы хотим создать несколько версий сайта  - то все они могут храниться в репозитории одновременно, но только в разных ветках.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;![Основная страница репозитория](img/repository_01.jpg &quot;Основная страница репозитория&quot;)">
      <appearance>
        <text weight="Bold"/>
      </appearance>
    </elements>
    <elements xsi:type="org.nasdanika.vinci.app:Action" title="Загрузка файлов и создание папок на ГитХаб" id="02d27bb4-41ae-46a7-8fa2-8852639534ee" color="Dark" text="Загрузка файлов и создание папок на ГитХаб" markdownContent="Для того чтобы загрузить файлы, из которых состоит сайт нажмем кнопочку __Upload files__.&#xD;&#xA;&#xD;&#xA;![](img/upload01.jpg &quot;Для загрузки нажимаем кнопочку Upload  files&quot;)&#xD;&#xA;&#xD;&#xA;На открывшейся странице мы можем либо перетащить файлы в область для загрузки, либо выбрать их в проводнике.  &#xD;&#xA;&#xD;&#xA;![](img/upload_02.jpg &quot;для этого нам нужно найти папку рабочего пространства, затем папку проекта и затем папку, в которую сгенерировался наш сайт.  Если возникнут сложности - пересмотрите 6 лекцию в которой на 7й минуте рассказывается как встраиваются изображения в страницу и как найти путь к этому изображению&quot;)&#xD;&#xA;&#xD;&#xA;Файлы появятся под областью загрузки. Однако они еще не размещены в репозитории. Для того чтобы они загрузились необходимо сделать коммит: ввести краткое и подробное описание изменений и нажать зеленую кнопку __Commit changes__.&#xD;&#xA;&#xD;&#xA;![](img/upload_03.jpg)&#xD;&#xA;&#xD;&#xA;Файлы загрузились. Однако, если вы помните, мы сохраняли изображения, в отдельной папке. И на данный момент эта папка в репозиторий не загружена. Если мы попытаемся ее загрузить - у нас не получится.&#xD;&#xA;&#xD;&#xA;На странице репозитория нигде нету кнопки __Создать папку__, есть только кнопка __Create new file__ (Создать новый файл).  Это связано с тем, что  папка без файлов в гитхабе  существовать не может. &#xD;&#xA;&#xD;&#xA;Поэтому папка создается одновременно с созданием какого либо файла, а если все файлы из папки удалить, то и папка тоже удалится.&#xD;&#xA;&#xD;&#xA;1. Нажимаем кнопку __Create new file__ &#xD;&#xA;2.  В поле ввода имени файла пишем название папки, затем косую черту (слэш)&#xD;&#xA;3. Перед полем ввода имени файла появляется название папки&#xD;&#xA;4. Вводим в поле __&quot;название&quot;__ __.gitkeep__ (Файл может быть любым, однако если он нужен только для того чтобы создать папку, то лучше создать специальный файлик который называется .gitkeep)&#xD;&#xA;5. Нажимаем кнопку __Commit changes__&#xD;&#xA;&#xD;&#xA;![создание новой папки и нового файла в гитхабе через веб-интерфейс](img/GreateFolderInGitHub.gif &quot;создание новой папки и нового файла в гитхабе через веб-интерфейс&quot;)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;">
      <appearance>
        <text weight="Bold"/>
      </appearance>
    </elements>
    <elements xsi:type="org.nasdanika.vinci.app:Action" title="Создание сайта из репозитория" id="543d04ed-394f-4e11-9836-239a8e0e6004" color="Dark" text="Создание сайта из репозитория" markdownContent="После того как мы загрузили файлы в репозиторий необходимо установить настройки GitHub pages. Для этого перейдем на вкладку __Settings__  и переходим в настройки репозитория. &#xD;&#xA;&#xD;&#xA;Открывается страница с настройками репозитория. &#xD;&#xA;Проматываем ее до раздела  __GitHub pages__ и выбираем: откуда будет публиковаться сайт: из __master branch__ (главной ветки), из специальной папки в главной ветке или ниоткуда (по умолчанию выбрано __None__ - то есть ниоткуда).&#xD;&#xA;&#xD;&#xA;Мы выберем __master branch__, гитхаб покажет нам предупреждение о том, что настройки изменились. И после этого в разделе __GitHub pages__ появится адрес нашего сайта.&#xD;&#xA;&#xD;&#xA;Ура! сайт опубликован! &#xD;&#xA;&#xD;&#xA;![](img/GitHub_pages.gif)&#xD;&#xA;&#xD;&#xA;">
      <appearance>
        <text weight="Bold"/>
      </appearance>
    </elements>
    <elements xsi:type="org.nasdanika.vinci.app:Action" title="Внесение изменений в сайт" id="64a2afe8-3e8d-47d2-b406-a14ba2ad0645" color="Dark" text="Внесение изменений в сайт" markdownContent="Зачастую, после публикации сайта возникает необходимость внести в него изменения: например, вы дополнили и расширили свою модель, изменили структуру навигационного каркаса и так далее. И вам необходимо опубликовать новую версию сайта.&#xD;&#xA;&#xD;&#xA;Для этого необходимо заменить те файлы которые уже хранятся в репозитории на их новые версии и, если были созданы новые файлы  - загрузить их в репозиторий.&#xD;&#xA;&#xD;&#xA;Существует несколько способов решить эту задачу:&#xD;&#xA;&#xD;&#xA;1. Программисты используют командную строку и специальные команды для того чтобы загрузить изменения в GitHub.   Это хороший способ, но мы не умеем этого делать :(&#xD;&#xA;2. Настроить в Eclipse Nasdanika Tool Suit работу с гитхаб репозиториями и обновлять сайт после каждого изменения нажатием двух кнопочек в программе.  *Это очень хороший и удобный способ. Но мы узнаем как это делается только в специальном  курсе.*&#xD;&#xA;3. Использовать веб интерфейс. Это не самый удобный способ. Но зато наиболее простой для понимания и не требующий значительного предварительного обучения. &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Если собираетесь не слишком часто обновлять ваш сайт - вполне можно обновлять сайт через веб-интерфейс. &#xD;&#xA;&#xD;&#xA;На самом деле это очень просто: вы можете просто загрузить все (или только измененные) файлы вашего сайта заново так же как вы загружали их в первый раз.  &#xD;&#xA;&#xD;&#xA;1. Нажимаете конпочку __Upload files__&#xD;&#xA;2. Делаете коммит&#xD;&#xA;3. ГитХаб обрабатывает файлы и загружает изменения&#xD;&#xA;4. Ждете 5-10 минут, заходите на ваш сайт (или обновляете страничку) и видите новую версию сайта, со всеми изменениями.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;При этом вы в любой момент времени может посмотреть: когда и какие файлы вы загружали, посмотреть старые версии файлов и т.д. &#xD;&#xA;">
      <appearance>
        <text weight="Bold"/>
      </appearance>
    </elements>
    <elements xsi:type="org.nasdanika.vinci.app:Action" title="Бесплатные хостинги" id="70807563-7f4c-46c5-8c79-ab942df20fdb" color="Dark" text="Бесплатные хостинги" markdownContent="Существуют альтернативные бесплатные варианты публикации сайта.  &#xD;&#xA;&#xD;&#xA;К сожалению, в руссоко-язычной зоне их очень не много, за исключением тех сервисов, которые предоставляют бесплатный хостинг при условии, что пользователь будет использовать предоставляемый сервисом конструктор сайтов.&#xD;&#xA;&#xD;&#xA;В англо-язычной зоне интернета выбор шире. Ниже представлен актуальных бесплатных хостинг-сервисов на апрель 2020 года: &#xD;&#xA;&#xD;&#xA;https://infinityfree.net&#xD;&#xA;&#xD;&#xA;https://neocities.org&#xD;&#xA;&#xD;&#xA;https://www.000webhost.com&#xD;&#xA;&#xD;&#xA;https://www.freehosting.com&#xD;&#xA;&#xD;&#xA;https://www.freehostia.com&#xD;&#xA;">
      <appearance>
        <text weight="Bold"/>
      </appearance>
    </elements>
  </elements>
  <elements xsi:type="org.nasdanika.vinci.app:Action" title="Заключительное слово" id="0c385d36-3e73-45ce-a9bb-48c1dff5f31e" text="Заключительное слово" icon="" role="Context" markdownContent="Ну вот мы и закончили наш курс&#xD;&#xA;">
    <appearance>
      <text color="Light" weight="Bold"/>
    </appearance>
  </elements>
  <elements xsi:type="org.nasdanika.vinci.app:Action" title="Использованные ресурсы и благодарности" id="76144261-aa7e-4df4-9ef9-fd011bca0dd3" text="Использованные ресурсы" icon="" role="Context" markdownContent="Ну вот мы и закончили наш курс&#xD;&#xA;">
    <appearance>
      <text color="Light" weight="Bold"/>
    </appearance>
  </elements>
  <elements xsi:type="org.nasdanika.vinci.app:Action" title="Программы расширенных курсов по Nasdanika Vinci" id="0ff41a60-2f53-4c83-9c2e-67ecaf6dc64c" text="Программы расширенных курсов по Nasdanika Vinci" icon="" role="Context" markdownContent="Ну вот мы и закончили наш курс&#xD;&#xA;">
    <appearance>
      <text color="Light" weight="Bold"/>
    </appearance>
  </elements>
</org.nasdanika.vinci.app:Action>
